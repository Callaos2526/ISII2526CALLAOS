// <auto-generated />
using System;
using AppForSEII2526.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppForSEII2526.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppForSEII2526.API.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sruename2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Bocadillo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComprasDelBocadillo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Pvp")
                        .HasColumnType("real");

                    b.Property<string>("Resenyabocadillo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Tamano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tamaño")
                        .HasColumnType("int");

                    b.Property<int>("tipopanPanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("tipopanPanId");

                    b.ToTable("Bocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonoBocadillo", b =>
                {
                    b.Property<int>("BonoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BonoId"));

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<int>("NBocadillos")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("PVP")
                        .HasColumnType("float");

                    b.Property<int>("TipoBocadillosIdTipo")
                        .HasColumnType("int");

                    b.HasKey("BonoId");

                    b.HasIndex("TipoBocadillosIdTipo");

                    b.ToTable("BonosBocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonosComprados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BonoId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<double>("PrecioBono")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasAlternateKey("CompraId", "BonoId");

                    b.HasIndex("BonoId");

                    b.ToTable("BonosComprados");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompraId"));

                    b.Property<string>("Apellido_1Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido_2Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioTotal")
                        .HasColumnType("real");

                    b.Property<int>("metodoPagoId")
                        .HasColumnType("int");

                    b.Property<int>("nBoadillos")
                        .HasColumnType("int");

                    b.HasKey("CompraId");

                    b.HasIndex("metodoPagoId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBocadillo", b =>
                {
                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("BocadilloId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NombreBocadillo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("CompraId", "BocadilloId");

                    b.HasIndex("BocadilloId");

                    b.ToTable("ComprasBocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBono", b =>
                {
                    b.Property<int>("CompraBonoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompraBonoId"));

                    b.Property<string>("ApellidoBono1")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ApellidoBono2")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("FechaCompraBono")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<int>("NBonos")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("PrecioTotalBono")
                        .HasColumnType("float");

                    b.HasKey("CompraBonoId");

                    b.HasIndex("MetodoPagoId");

                    b.ToTable("ComprasBono");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra_Producto", b =>
                {
                    b.Property<int>("Compraid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Compraid"));

                    b.Property<string>("Apellido_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionEnvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("Metodo_Pago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrecioFinal")
                        .HasColumnType("int");

                    b.HasKey("Compraid");

                    b.ToTable("Compra_Producto");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.MetodoPago", b =>
                {
                    b.Property<int>("metodoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("metodoPagoId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("metodoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("metodoPagoId");

                    b.ToTable("MetodoPago");

                    b.HasDiscriminator().HasValue("MetodoPago");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto", b =>
                {
                    b.Property<int>("Productoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Productoid"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PVP")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Productoid");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto_Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Compraid")
                        .HasColumnType("int");

                    b.Property<int>("PVP")
                        .HasColumnType("int");

                    b.Property<int>("Productoid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Compraid");

                    b.HasIndex("Productoid");

                    b.ToTable("Producto_Compra");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Resenya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resenyas");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.ResenyaBocadillo", b =>
                {
                    b.Property<int>("BocadilloId")
                        .HasColumnType("int");

                    b.Property<int>("ResenyaId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.HasKey("BocadilloId", "ResenyaId");

                    b.HasIndex("ResenyaId");

                    b.ToTable("ResenyasBocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoBocadillo", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipo"));

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipo");

                    b.ToTable("TiposBocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoPan", b =>
                {
                    b.Property<int>("PanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PanId"));

                    b.Property<int?>("CompraBocadilloBocadilloId")
                        .HasColumnType("int");

                    b.Property<int?>("CompraBocadilloCompraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PanId");

                    b.HasIndex("CompraBocadilloCompraId", "CompraBocadilloBocadilloId");

                    b.ToTable("TiposPan");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoProducto", b =>
                {
                    b.Property<int>("Productoid")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Productoid");

                    b.ToTable("TipoProducto");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.GooglePay", b =>
                {
                    b.HasBaseType("AppForSEII2526.API.Models.MetodoPago");

                    b.HasDiscriminator().HasValue("GooglePay");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Paypal", b =>
                {
                    b.HasBaseType("AppForSEII2526.API.Models.MetodoPago");

                    b.HasDiscriminator().HasValue("Paypal");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Tarjeta", b =>
                {
                    b.HasBaseType("AppForSEII2526.API.Models.MetodoPago");

                    b.HasDiscriminator().HasValue("Tarjeta");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Bocadillo", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.TipoPan", "tipopan")
                        .WithMany("Bocadillos")
                        .HasForeignKey("tipopanPanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipopan");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonoBocadillo", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.TipoBocadillo", "TipoBocadillos")
                        .WithMany("Bonos")
                        .HasForeignKey("TipoBocadillosIdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoBocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonosComprados", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.BonoBocadillo", "Bono")
                        .WithMany("bonosComprados")
                        .HasForeignKey("BonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.CompraBono", "Compra")
                        .WithMany("bonosComprados")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bono");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.MetodoPago", "metodoPago")
                        .WithMany()
                        .HasForeignKey("metodoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("metodoPago");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBocadillo", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Bocadillo", "Bocadillo")
                        .WithMany()
                        .HasForeignKey("BocadilloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Compra", "Compra")
                        .WithMany("BocadillosComprados")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bocadillo");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBono", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.MetodoPago", "MetodoPago")
                        .WithMany("compraBonos")
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MetodoPago");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto_Compra", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Compra_Producto", "compra")
                        .WithMany()
                        .HasForeignKey("Compraid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("Productoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compra");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.ResenyaBocadillo", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Bocadillo", "Bocadillo")
                        .WithMany("ResenyaBocadillo")
                        .HasForeignKey("BocadilloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Resenya", "Resenya")
                        .WithMany("ResenyaBocadillo")
                        .HasForeignKey("ResenyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bocadillo");

                    b.Navigation("Resenya");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoPan", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.CompraBocadillo", null)
                        .WithMany("TipoPan")
                        .HasForeignKey("CompraBocadilloCompraId", "CompraBocadilloBocadilloId");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoProducto", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Producto", null)
                        .WithOne("TipoProducto")
                        .HasForeignKey("AppForSEII2526.API.Models.TipoProducto", "Productoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Bocadillo", b =>
                {
                    b.Navigation("ResenyaBocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonoBocadillo", b =>
                {
                    b.Navigation("bonosComprados");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra", b =>
                {
                    b.Navigation("BocadillosComprados");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBocadillo", b =>
                {
                    b.Navigation("TipoPan");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBono", b =>
                {
                    b.Navigation("bonosComprados");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.MetodoPago", b =>
                {
                    b.Navigation("compraBonos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto", b =>
                {
                    b.Navigation("TipoProducto")
                        .IsRequired();
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Resenya", b =>
                {
                    b.Navigation("ResenyaBocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoBocadillo", b =>
                {
                    b.Navigation("Bonos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoPan", b =>
                {
                    b.Navigation("Bocadillos");
                });
#pragma warning restore 612, 618
        }
    }
}
